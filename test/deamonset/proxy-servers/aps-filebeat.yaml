---
apiVersion: v1
kind: ConfigMap
metadata:
  name: aps-filebeat-config
  namespace: auth
  labels:
    k8s-app: filebeat
data:
  filebeat.yml: |-
    filebeat.inputs:
    - type: container
      paths:
        - "/var/log/containers/auth-proxy-server*auth_auth-proxy-server*.log"
    output.logstash:
      hosts: ["logstash.monitoring:5044"]
    queue.mem:
      events: 65536
    logging.metrics.enabled: false
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  labels:
    app: aps-filebeat
  name: aps-filebeat
  namespace: auth
spec:
  selector:
    matchLabels:
      app: aps-filebeat
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: aps-filebeat
        env: k8s #k8s#
    spec:
      dnsPolicy: ClusterFirst
      securityContext:
        seLinuxOptions:
          type: spc_t
      serviceAccount: aps-filebeat

      serviceAccountName: aps-filebeat
      terminationGracePeriodSeconds: 60
      #dnsPolicy: ClusterFirstWithHostNet
      #hostNetwork: true
      # this daemonset will be applied to all nodes which will have role=autha label
      # kubectl label node <node-name> role=auth --overwrite
      nodeSelector:
        role: auth
      priorityClassName: system-node-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}

      containers:
      - name: aps-filebeat
        image: docker.elastic.co/beats/filebeat:7.12.0
        args: [
          "-c", "/etc/filebeat.yml",
          "-e",
        ]
        securityContext:
          runAsUser: 0
          # If using Red Hat OpenShift uncomment this:
          privileged: true
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
        volumeMounts:
        - name: config
          mountPath: /etc/filebeat.yml
          readOnly: true
          subPath: filebeat.yml
        - name: data
          mountPath: /usr/share/filebeat/data
        - name: varlog
          mountPath: /var/log
          readOnly: true
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true

      volumes:
      - name: varlog
        hostPath:
          path: /var/log
          type: ""
      - name: config
        configMap:
          defaultMode: 0640
          name: aps-filebeat-config
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
          type: ""
      - name: data
        emptyDir: {}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: aps-filebeat
subjects:
- kind: ServiceAccount
  name: aps-filebeat
  namespace: auth
roleRef:
  kind: ClusterRole
  name: aps-filebeat
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: aps-filebeat
  labels:
    k8s-app: aps-filebeat
rules:
- apiGroups: [""] # "" indicates the core API group
  resources:
  - namespaces
  - pods
  verbs:
  - get
  - watch
  - list
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: aps-filebeat
  namespace: auth
  labels:
    k8s-app: aps-filebeat
---
